{"ast":null,"code":"import { invariant } from \"../../utilities/globals/index.js\";\nimport * as React from \"react\";\nimport { getApolloContext } from \"../context/index.js\";\nexport function useApolloClient(override) {\n  var context = React.useContext(getApolloContext());\n  var client = override || context.client;\n  invariant(!!client, 47);\n  return client;\n}","map":{"version":3,"names":["invariant","React","getApolloContext","useApolloClient","override","context","useContext","client"],"sources":["/Users/michaellin/side-projects/musicProject/my-app/client/node_modules/@apollo/src/react/hooks/useApolloClient.ts"],"sourcesContent":["import { invariant } from \"../../utilities/globals/index.js\";\nimport * as React from \"react\";\nimport type { ApolloClient } from \"../../core/index.js\";\nimport { getApolloContext } from \"../context/index.js\";\n\nexport function useApolloClient(\n  override?: ApolloClient<object>\n): ApolloClient<object> {\n  const context = React.useContext(getApolloContext());\n  const client = override || context.client;\n  invariant(\n    !!client,\n    'Could not find \"client\" in the context or passed in as an option. ' +\n      \"Wrap the root component in an <ApolloProvider>, or pass an ApolloClient \" +\n      \"instance in via options.\"\n  );\n\n  return client;\n}\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,kCAAkC;AAC5D,OAAO,KAAKC,KAAK,MAAM,OAAO;AAE9B,SAASC,gBAAgB,QAAQ,qBAAqB;AAEtD,OAAM,SAAUC,eAAeA,CAC7BC,QAA+B;EAE/B,IAAMC,OAAO,GAAGJ,KAAK,CAACK,UAAU,CAACJ,gBAAgB,EAAE,CAAC;EACpD,IAAMK,MAAM,GAAGH,QAAQ,IAAIC,OAAO,CAACE,MAAM;EACzCP,SAAS,CACP,CAAC,CAACO,MAAM,EACR;SACEA,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}