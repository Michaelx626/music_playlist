{"ast":null,"code":"import { __assign } from \"tslib\";\nimport * as React from \"react\";\nimport { mergeOptions } from \"../../utilities/index.js\";\nimport { equal } from \"@wry/equality\";\nimport { DocumentType, verifyDocumentType } from \"../parser/index.js\";\nimport { ApolloError } from \"../../errors/index.js\";\nimport { useApolloClient } from \"./useApolloClient.js\";\nexport function useMutation(mutation, options) {\n  var client = useApolloClient(options === null || options === void 0 ? void 0 : options.client);\n  verifyDocumentType(mutation, DocumentType.Mutation);\n  var _a = React.useState({\n      called: false,\n      loading: false,\n      client: client\n    }),\n    result = _a[0],\n    setResult = _a[1];\n  var ref = React.useRef({\n    result: result,\n    mutationId: 0,\n    isMounted: true,\n    client: client,\n    mutation: mutation,\n    options: options\n  });\n  {\n    Object.assign(ref.current, {\n      client: client,\n      options: options,\n      mutation: mutation\n    });\n  }\n  var execute = React.useCallback(function (executeOptions) {\n    if (executeOptions === void 0) {\n      executeOptions = {};\n    }\n    var _a = ref.current,\n      options = _a.options,\n      mutation = _a.mutation;\n    var baseOptions = __assign(__assign({}, options), {\n      mutation: mutation\n    });\n    var client = executeOptions.client || ref.current.client;\n    if (!ref.current.result.loading && !baseOptions.ignoreResults && ref.current.isMounted) {\n      setResult(ref.current.result = {\n        loading: true,\n        error: void 0,\n        data: void 0,\n        called: true,\n        client: client\n      });\n    }\n    var mutationId = ++ref.current.mutationId;\n    var clientOptions = mergeOptions(baseOptions, executeOptions);\n    return client.mutate(clientOptions).then(function (response) {\n      var _a, _b;\n      var data = response.data,\n        errors = response.errors;\n      var error = errors && errors.length > 0 ? new ApolloError({\n        graphQLErrors: errors\n      }) : void 0;\n      var onError = executeOptions.onError || ((_a = ref.current.options) === null || _a === void 0 ? void 0 : _a.onError);\n      if (error && onError) {\n        onError(error, clientOptions);\n      }\n      if (mutationId === ref.current.mutationId && !clientOptions.ignoreResults) {\n        var result_1 = {\n          called: true,\n          loading: false,\n          data: data,\n          error: error,\n          client: client\n        };\n        if (ref.current.isMounted && !equal(ref.current.result, result_1)) {\n          setResult(ref.current.result = result_1);\n        }\n      }\n      var onCompleted = executeOptions.onCompleted || ((_b = ref.current.options) === null || _b === void 0 ? void 0 : _b.onCompleted);\n      if (!error) {\n        onCompleted === null || onCompleted === void 0 ? void 0 : onCompleted(response.data, clientOptions);\n      }\n      return response;\n    }).catch(function (error) {\n      var _a;\n      if (mutationId === ref.current.mutationId && ref.current.isMounted) {\n        var result_2 = {\n          loading: false,\n          error: error,\n          data: void 0,\n          called: true,\n          client: client\n        };\n        if (!equal(ref.current.result, result_2)) {\n          setResult(ref.current.result = result_2);\n        }\n      }\n      var onError = executeOptions.onError || ((_a = ref.current.options) === null || _a === void 0 ? void 0 : _a.onError);\n      if (onError) {\n        onError(error, clientOptions);\n        return {\n          data: void 0,\n          errors: error\n        };\n      }\n      throw error;\n    });\n  }, []);\n  var reset = React.useCallback(function () {\n    if (ref.current.isMounted) {\n      setResult({\n        called: false,\n        loading: false,\n        client: client\n      });\n    }\n  }, []);\n  React.useEffect(function () {\n    ref.current.isMounted = true;\n    return function () {\n      ref.current.isMounted = false;\n    };\n  }, []);\n  return [execute, __assign({\n    reset: reset\n  }, result)];\n}","map":{"version":3,"names":["React","mergeOptions","equal","DocumentType","verifyDocumentType","ApolloError","useApolloClient","useMutation","mutation","options","client","Mutation","_a","useState","called","loading","result","setResult","ref","useRef","mutationId","isMounted","Object","assign","current","execute","useCallback","executeOptions","baseOptions","__assign","ignoreResults","error","data","clientOptions","mutate","then","response","errors","length","graphQLErrors","onError","result_1","onCompleted","_b","catch","result_2","reset","useEffect"],"sources":["/Users/michaellin/side-projects/musicProject/my-app/client/node_modules/@apollo/src/react/hooks/useMutation.ts"],"sourcesContent":["import * as React from \"react\";\nimport type { DocumentNode } from \"graphql\";\nimport type { TypedDocumentNode } from \"@graphql-typed-document-node/core\";\nimport type {\n  MutationFunctionOptions,\n  MutationHookOptions,\n  MutationResult,\n  MutationTuple,\n  NoInfer,\n} from \"../types/types.js\";\n\nimport type {\n  ApolloCache,\n  DefaultContext,\n  OperationVariables,\n} from \"../../core/index.js\";\nimport { mergeOptions } from \"../../utilities/index.js\";\nimport { equal } from \"@wry/equality\";\nimport { DocumentType, verifyDocumentType } from \"../parser/index.js\";\nimport { ApolloError } from \"../../errors/index.js\";\nimport { useApolloClient } from \"./useApolloClient.js\";\n\nexport function useMutation<\n  TData = any,\n  TVariables = OperationVariables,\n  TContext = DefaultContext,\n  TCache extends ApolloCache<any> = ApolloCache<any>,\n>(\n  mutation: DocumentNode | TypedDocumentNode<TData, TVariables>,\n  options?: MutationHookOptions<\n    NoInfer<TData>,\n    NoInfer<TVariables>,\n    TContext,\n    TCache\n  >\n): MutationTuple<TData, TVariables, TContext, TCache> {\n  const client = useApolloClient(options?.client);\n  verifyDocumentType(mutation, DocumentType.Mutation);\n  const [result, setResult] = React.useState<Omit<MutationResult, \"reset\">>({\n    called: false,\n    loading: false,\n    client,\n  });\n\n  const ref = React.useRef({\n    result,\n    mutationId: 0,\n    isMounted: true,\n    client,\n    mutation,\n    options,\n  });\n\n  // TODO: Trying to assign these in a useEffect or useLayoutEffect breaks\n  // higher-order components.\n  {\n    Object.assign(ref.current, { client, options, mutation });\n  }\n\n  const execute = React.useCallback(\n    (\n      executeOptions: MutationFunctionOptions<\n        TData,\n        TVariables,\n        TContext,\n        TCache\n      > = {}\n    ) => {\n      const { options, mutation } = ref.current;\n      const baseOptions = { ...options, mutation };\n      const client = executeOptions.client || ref.current.client;\n\n      if (\n        !ref.current.result.loading &&\n        !baseOptions.ignoreResults &&\n        ref.current.isMounted\n      ) {\n        setResult(\n          (ref.current.result = {\n            loading: true,\n            error: void 0,\n            data: void 0,\n            called: true,\n            client,\n          })\n        );\n      }\n\n      const mutationId = ++ref.current.mutationId;\n      const clientOptions = mergeOptions(baseOptions, executeOptions as any);\n\n      return client\n        .mutate(clientOptions)\n        .then((response) => {\n          const { data, errors } = response;\n          const error =\n            errors && errors.length > 0\n              ? new ApolloError({ graphQLErrors: errors })\n              : void 0;\n\n          const onError =\n            executeOptions.onError || ref.current.options?.onError;\n\n          if (error && onError) {\n            onError(error, clientOptions);\n          }\n\n          if (\n            mutationId === ref.current.mutationId &&\n            !clientOptions.ignoreResults\n          ) {\n            const result = {\n              called: true,\n              loading: false,\n              data,\n              error,\n              client,\n            };\n\n            if (ref.current.isMounted && !equal(ref.current.result, result)) {\n              setResult((ref.current.result = result));\n            }\n          }\n\n          const onCompleted =\n            executeOptions.onCompleted || ref.current.options?.onCompleted;\n\n          if (!error) {\n            onCompleted?.(response.data!, clientOptions);\n          }\n\n          return response;\n        })\n        .catch((error) => {\n          if (mutationId === ref.current.mutationId && ref.current.isMounted) {\n            const result = {\n              loading: false,\n              error,\n              data: void 0,\n              called: true,\n              client,\n            };\n\n            if (!equal(ref.current.result, result)) {\n              setResult((ref.current.result = result));\n            }\n          }\n\n          const onError =\n            executeOptions.onError || ref.current.options?.onError;\n\n          if (onError) {\n            onError(error, clientOptions);\n\n            // TODO(brian): why are we returning this here???\n            return { data: void 0, errors: error };\n          }\n\n          throw error;\n        });\n    },\n    []\n  );\n\n  const reset = React.useCallback(() => {\n    if (ref.current.isMounted) {\n      setResult({ called: false, loading: false, client });\n    }\n  }, []);\n\n  React.useEffect(() => {\n    ref.current.isMounted = true;\n\n    return () => {\n      ref.current.isMounted = false;\n    };\n  }, []);\n\n  return [execute, { reset, ...result }];\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}